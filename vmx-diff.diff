diff --git a/arch/x86/kvm/vmx/vmx.c b/arch/x86/kvm/vmx/vmx.c
old mode 100644
new mode 100755
index ab6d2d1525ec..4d94da0a7094
--- a/arch/x86/kvm/vmx/vmx.c
+++ b/arch/x86/kvm/vmx/vmx.c
@@ -5922,6 +5922,12 @@ void dump_vmcs(void)
 		       vmcs_read16(VIRTUAL_PROCESSOR_ID));
 }
 
+_Atomic (unsigned long int) exit_counts = 0;
+_Atomic (unsigned long long int) cpu_cycles_in_exit = 0;
+long cpu_cycles_count_start = 0;
+long cpu_cycles_count_end = 0;
+int response = 0;
+
 /*
  * The guest has exited.  See if we can fix it or if we need userspace
  * assistance.
@@ -5930,7 +5936,7 @@ static int vmx_handle_exit(struct kvm_vcpu *vcpu, fastpath_t exit_fastpath)
 {
 	struct vcpu_vmx *vmx = to_vmx(vcpu);
 	u32 exit_reason = vmx->exit_reason;
-	u32 vectoring_info = vmx->idt_vectoring_info;
+	u32 vectoring_info = vmx->idt_vectoring_info;	
 
 	/*
 	 * Flush logged GPAs PML buffer, this will make dirty_bitmap more
@@ -6063,7 +6069,17 @@ static int vmx_handle_exit(struct kvm_vcpu *vcpu, fastpath_t exit_fastpath)
 	if (!kvm_vmx_exit_handlers[exit_reason])
 		goto unexpected_vmexit;
 
-	return kvm_vmx_exit_handlers[exit_reason](vcpu);
+	++exit_counts;
+    cpu_cycles_count_start = rdtsc();
+	response = kvm_vmx_exit_handlers[exit_reason](vcpu);
+	cpu_cycles_count_end = rdtsc();
+	cpu_cycles_in_exit += (cpu_cycles_count_end - cpu_cycles_count_start);
+    if(exit_reason == 10){ //10 is exit reason for CPUID.
+    	kvm_rax_write(vcpu, exit_counts);
+	    kvm_rbx_write(vcpu, (cpu_cycles_in_exit & 0xFFFFFFFF00000000) >> 32);
+	    kvm_rcx_write(vcpu, (cpu_cycles_in_exit & 0x00000000FFFFFFFF));
+    }
+	return response;
 
 unexpected_vmexit:
 	vcpu_unimpl(vcpu, "vmx: unexpected exit reason 0x%x\n", exit_reason);
